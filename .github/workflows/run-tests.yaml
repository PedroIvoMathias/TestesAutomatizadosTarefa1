name: Testes com Edge

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-with-edge:
    runs-on: windows-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Detectar e baixar EdgeDriver compatível
        shell: pwsh
        run: |
          $edgePath = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
          if (-Not (Test-Path $edgePath)) {
            throw "Microsoft Edge não encontrado em $edgePath"
          }

          $edgeVersion = (Get-Item $edgePath).VersionInfo.FileVersion
          Write-Host "Versão do Edge: $edgeVersion"

          $major = $edgeVersion.Split('.')[0]
          Write-Host "Versão major: $major"

          $versionUrl = "https://msedgedriver.azureedge.net/LATEST_RELEASE_$major"
          $driverVersion = Invoke-RestMethod -Uri $versionUrl -UseBasicParsing
          Write-Host "Versão do EdgeDriver: $driverVersion"

          $driverUrl = "https://msedgedriver.azureedge.net/$driverVersion/edgedriver_win64.zip"
          Write-Host "Baixando EdgeDriver de: $driverUrl"

          Invoke-WebRequest -Uri $driverUrl -OutFile "edgedriver.zip"
          Expand-Archive -Path "edgedriver.zip" -DestinationPath "edgedriver" -Force

          $edgedriverPath = Resolve-Path ".\edgedriver"
          echo "$edgedriverPath" | Out-File -Append -Encoding ascii $env:GITHUB_PATH

      - name: Rodar os testes com Selenium
        run: dotnet test
