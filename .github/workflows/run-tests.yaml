name: Rodar Todos os Testes

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Verificar versão do Edge
        id: check_edge_version
        run: |
          # Tentar buscar a versão do Edge no registro
          $regKey = "HKLM:\SOFTWARE\Microsoft\Edge\BLBeacon"
          
          if (Test-Path $regKey) {
            $edgeVersion = (Get-ItemProperty -Path $regKey).version
            if ($null -ne $edgeVersion) {
              $majorVersion = $edgeVersion.Split('.')[0]
              Write-Host "Versão do Edge: $edgeVersion"
              Write-Host "Versão major: $majorVersion"
              echo "::set-output name=major_version::$majorVersion"
            } else {
              Write-Error "Não foi possível obter a versão do Edge."
              exit 1
            }
          } else {
            Write-Error "Edge não encontrado no registro. Certifique-se de que o Microsoft Edge está instalado."
            exit 1
          }

      - name: Baixar EdgeDriver
        id: download_edge_driver
        run: |
          $majorVersion = ${{ steps.check_edge_version.outputs.major_version }}
          $driverUrl = "https://msedgedriver.azureedge.net/$majorVersion.0/$majorVersion.0.0/edgedriver_win64.zip"
          echo "Baixando EdgeDriver de: $driverUrl"
          Invoke-WebRequest -Uri $driverUrl -OutFile "edgedriver.zip"

      - name: Extrair EdgeDriver
        run: |
          Expand-Archive -Path "edgedriver.zip" -DestinationPath "C:\drivers"

      - name: Configurar o PATH do EdgeDriver
        run: |
          $env:Path += ";C:\drivers"
          Write-Host "EdgeDriver configurado no PATH"

      - name: Instalar Dependências do Projeto
        run: |
          dotnet restore

      - name: Rodar todos os testes
        run: |
          dotnet test --configuration Release
